"0","# filter for genera from first output series of GAMLSS tests (select.gen.EcN2)."
"0",""
"0","# object 1: metadata"
"0","EcN.ls.met <- meta(ps1.EcN.g.r)"
"0",""
"0","EcN.ls1 <- EcN.ls.met[,c(""Description"",""Ear_tag"", ""EcN_NGS_relative"", ""department_pre_weaning"", ""Treatment"",""Day_of_study_factor"")]"
"0",""
"0","# object 2: OTU table"
"0","EcN.ls2 <- as.data.frame(t(otu_table(ps1.EcN.g.r)))"
"0","EcN.ls2$Description <- rownames(EcN.ls2)"
"0","# melt EcN.ls2"
"0","EcN.ls2.m <- reshape2::melt(EcN.ls2)"
"2","Using Description as id variables
"
"0","colnames(EcN.ls2.m) <- c(""Description"", ""OTU"", ""abund"")"
"0","# merge EcN.ls2, EcN.tax and EcN.ls1"
"0","EcN.ls3a <- base::merge(EcN.ls2.m, EcN.tax, by = ""OTU"")"
"0","EcN.ls3 <- base::merge(EcN.ls1, EcN.ls3a, by = ""Description"")"
"0",""
"0","# subset to signif genera"
"0","EcN.ls3.max <- ddply(EcN.ls3, .(OTU), summarise, max = max(abund))"
"0",""
"0","EcN.ls3.max$OTU <- droplevels(EcN.ls3.max$OTU)"
"0","EcN.ls3.s <- subset(EcN.ls3, OTU %in% select.gen.EcN2 & OTU %in%"
"0","                     EcN.ls3.max$OTU)"
"0","EcN.ls3.s$OTU <- droplevels(EcN.ls3.s$OTU)"
